---
title: "Assemble and Upload pre-processed data"
author: "Rainer M. Krug"
format: 
  html:
    toc: true
    toc-location: left
    code-overflow: scroll
    code-fold: true
    code-tools: true
    embed-resources: true
params:
  prepare_stage: [pre_processed, extracted]
  cores: 7
  data_dir: "/Volumes/LEEF-1_archive/LEEF.archived.data/"
  metadata_pre_processed: "~/git/LEEF/LEEF.metadata/metadata_pre_processed.zip"
  metadata_extracted: "~/git/LEEF/LEEF.metadata/metadata_extracted.zip"
  data_package_dir: "/Volumes/LEEF-1_archive/Data Packages/"
  prepare: false
  sandbox: false
  metadata_file: "metadata_LEEF_1.json"
---


## Introduction

This document assembles and publishes the pre-processed data and adds the metadata as defined in the function `metadata()` defined below.

Depending on the settings of `prepare` and `publish`, the data is prepared and / or published in the Zenodo Sandbox (`sandbox: TRUE`) or in the Zenodo repository. This should only be enabled if absolutely sure that everything is complete for publication. Data will be published as **Embargoed** until **WHICH TIME?**.

```{r}
#| label: setup
#|

if (!exists("params")) {
    params <- rmarkdown::yaml_front_matter(here::here("inst", "Assemble and Upload pre-processed data.qmd"))$params
}

devtools::load_all(here::here())
```

The following parameter will be used (explained later in the document):

```{r}
params
```

## Create Deposit as unpublished draft
The bibliometric metadata is defined in the file `r system.file(package = "zenDep", params$metadata_file)`.

We will add the metadata to the daposit client
```{r}
metadata <- system.file(
    package = "zenDep",
    params$metadata_file
) |>
    jsonlite::read_json()

# And filter out al fields starting with "_" as they are considered comments
# This is hopefully integrated in the next release of `deposits`

metadata <- metadata[grep("^_", names(metadata), invert = TRUE)]

cli <- depositsClient$new(
    service = "zenodo",
    sandbox = params$sandbox
)
```

### RRD

#### LEEF-1 Density
```{r}
#| eval: false
#|
metadata$title #| <- "LEEF-1 experiment Density Data"
metadata$description <- "Density data sampled during the LEEF-1 experiment. The dataset has been created by rendering the report https://github.com/LEEF-UZH/LEEF.analysis/blob/c46c3ae1c232ddd85422683655a7cd9414eb7fe8/inst/LEEF-1/Reclassification_and_Data_Cleaning.qmd in https://doi.org/10.5281/zenodo.10400510"
cli$deposit_fill_metadata(metadata)
cli$deposit_new()
```

The following needs to be done on Zenodo in the unpublished draft Please open this link [after logging into Zenodo](https://zenodo.org/me/uploads?q=&l=list&p=1&s=10&sort=newest):

- [x] Set Embargoed until 2026-01-01 - Reason: Finalisation of Project and Publications
- [x] Add Resource Type: Dataset
- [x] add version 1.0.0
- [x] Add grant "Advancing the limits of ecological forecasting in changing environments using very long-term experimentation with micro-ecosystems"
- [x] Keywords: microcosm, ecological forecast
- [ ] upload deposit and deposit metadata

[Reserved DOI: 10.5281/zenodo.10400747](https://zenodo.org/uploads/10400747)

#### LEEF-1 Density and Traits
```{r}
#| eval: false
#|
metadata$title <- "LEEF-1 experiment Density and Trait Data"
metadata$description <- "Density and Trait data sampled during the LEEF-1 experiment. The dataset has been created by rendering the report https://github.com/LEEF-UZH/LEEF.analysis/blob/c46c3ae1c232ddd85422683655a7cd9414eb7fe8/inst/LEEF-1/Reclassification_and_Data_Cleaning.qmd in https://doi.org/10.5281/zenodo.10400510"
cli$deposit_fill_metadata(metadata)
cli$deposit_new()
```

The following needs to be done on Zenodo in the unpublished draft Please open this link [after logging into Zenodo](https://zenodo.org/me/uploads?q=&l=list&p=1&s=10&sort=newest):

- [x] Set Embargoed until 2026-01-01 - Reason: Finalisation of Project and Publications
- [x] Add Resource Type: Dataset
- [x] add version 1.0.0
- [x] Add grant "Advancing the limits of ecological forecasting in changing environments using very long-term experimentation with micro-ecosystems"
- [x] Keywords: microcosm, ecological forecast
- [ ] upload deposit and deposit metadata

[Reserved DOI: 10.5281/zenodo.10400742](https://zenodo.org/uploads/10400742)

#### LEEF-2 Density
```{r}
#| eval: false
#|
metadata$title <- "LEEF-2 experiment Density Data"
metadata$description <- "Density data sampled during the LEEF-2 experiment. The dataset has been created by rendering the report https://github.com/LEEF-UZH/LEEF.analysis/blob/62686d094eb8041d32960738cd4565d5485b8a2b/inst/LEEF-2/LEEF-2%20Reclassification_and_Data_Cleaning.qmd in https://doi.org/10.5281/zenodo.10400510"
cli$deposit_fill_metadata(metadata)
cli$deposit_new()
```

The following needs to be done on Zenodo in the unpublished draft Please open this link [after logging into Zenodo](https://zenodo.org/me/uploads?q=&l=list&p=1&s=10&sort=newest):

- [x] Set Embargoed until 2026-01-01 - Reason: Finalisation of Project and Publications
- [x] Add Resource Type: Dataset
- [x] Keywords: microcosm, ecological forecast
- [x] add version 1.0.0
- [x] Add grant "Advancing the limits of ecological forecasting in changing environments using very long-term experimentation with micro-ecosystems"
- [ ] upload deposit and deposit metadata

[Reserved DOI: 10.5281/zenodo.10400749](https://zenodo.org/uploads/10400749)

#### LEEF-2 Density and Traits
```{r}
#| eval: false
#|
metadata$title <- "LEEF-2 experiment Density and TraitData"
metadata$description <- "Density and Trait data sampled during the LEEF-2 experiment. The dataset has been created by rendering the report https://github.com/LEEF-UZH/LEEF.analysis/blob/62686d094eb8041d32960738cd4565d5485b8a2b/inst/LEEF-2/LEEF-2%20Reclassification_and_Data_Cleaning.qmd in https://doi.org/10.5281/zenodo.10400510"
cli$deposit_fill_metadata(metadata)
cli$deposit_new()
```

The following needs to be done on Zenodo in the unpublished draft Please open this link [after logging into Zenodo](https://zenodo.org/me/uploads?q=&l=list&p=1&s=10&sort=newest):

- [x] Set Embargoed until 2026-01-01 - Reason: Finalisation of Project and Publications
- [x] Add Resource Type: Dataset
- [x] add version
- [x] Add grant "Advancing the limits of ecological forecasting in changing environments using very long-term experimentation with micro-ecosystems"
- [x] Keywords: microcosm, ecological forecast
- [ ] upload deposit and deposit metadata

[Reserved DOI: 10.5281/zenodo.10400896](https://zenodo.org/uploads/10400896)

## Prepare data packages
Now the data packages will be prepared and named accordingly if `parms$prepare == TRUE`. The original data is located in ``r params$data_dir`` and saved in the directory ``r params$data_package_dir``. 
All timestamps in ``r params$data_dir`` will be processed using ``r params$cores`` cores as specified in the parameter `params$cores`.

If `parms$prepare == FALSE`, nothing will be done and the data packaged will be expected in the directory ``r params$data_package_dir``.
```{r}
#| label: prepare_data_packages

if (params$prepare) {
    leef_create_data_archives_per_method(
        to_dir = params$data_package_dir,
        data_dir = params$data_dir,
        stage = params$prepare_stage,
        cores = params$cores
    )
}
```

## Check data deposits and publish to Zenodo
This step verifies the data deposits for the pre-processed data (metadata & data package) and the extracted data (metadata & data package) and their metadata,

### Determine Timestamps
The following timestamps will be deposited
```{r}
#| label: determine_timestamps

timestamps <- list.files(params$data_package_dir) |>
    (\(.) substr(., start = nchar(.) - 11, stop = nchar(.) - 4))() |>
    unique()
timestamps
```

### Check pre-processed data packages

The pre-processed data packages are expected in the directory ``r params$data_package_dir``.
```{r}
#| label: check_pre_processed
#| results: asis
#|
OK <- TRUE

fe <- file.path(params$data_package_dir, paste0("data_pre_processed_", timestamps, ".zip")) |>
    file.exists()
if (all(fe)) {
    pp_missing <- character(0)
    cat("All pre_processed data packages availabable!")
} else {
    pp_missing <- paste0("data_pre_processed_", timestamps[!fe], ".zip")
    cat("**Missing pre_processed data packages!**\n\n")
    print(pp_missing)
    OK <- FALSE
}
rm(fe)
```

### Check extracted data packages

The extracted data packages are expected in the directory ``r params$data_package_dir``.
```{r}
#| label: check_extracted
#| results: asis

fe <- file.path(params$data_package_dir, paste0("data_extracted_", timestamps, ".zip")) |>
    file.exists()
if (all(fe)) {
    ex_missing <- character(0)
    cat("All pre-extracted data packages availabable!")
} else {
    ex_missing <- paste0("data_extracted_", timestamps[!fe], ".zip")
    cat("**ERROR: Missing extracted data packages!**\n\n")
    print(ex_missing)
    OK <- FALSE
}
rm(fe)
```

### Check pre-processed metadata

The pre-processed metadata id expected at ``r params$metadata_pre_processed``.
```{r}
#| label: check_metadata_pre_processed
#| results: asis

if (file.exists(params$metadata_pre_processed)) {
    cat("Pre_processed metadata package availabable!")
} else {
    cat("**ERROR: Missing Pre_processed metadata package!**")
    OK <- FALSE
}
```

### Check extracted metadata

The extracted metadata id expected at ``r params$metadata_extracted``.
```{r}
#| label: check_metadata_extracted
#| results: asis

if (file.exists(params$metadata_extracted)) {
    cat("extracted metadata package availabable!")
} else {
    cat("**ERROR: Missing extracted metadata package!**")
    OK <- FALSE
}
```

### Check if Zenodo token is set

Here we check if the environmental variable `ZENODO_PAT` is set, which is necessary for deposits on Zenodo.
```{r}
#| label: chech_ZENODO_PAT
#| results: asis

if (!is.null(zen4R:::zenodo_pat())) {
    cat("Environmental variable `ZENODO_PAT` is set!")
} else {
    cat("**ERROR: Environmental variable `ZENODO_PAT` is not set!**")
    OK <- FALSE
}
```

```{r}
#| label: skip
#| results: asis
#| echo: false
#| eval: !expr '!OK'

cat("**All following processing is skipped as the input data or metadata is not complete or the environmental variable ZENODO_PAT is not set!**")
```

## Do the deposit

Here the data packages and the related metadata is uploads them to Zenodo (if `params$sandbox == TRUE` to the sandbox, the value is ``r params$sandbox``) using the bibliometric metadata, and DOIs are generated.
```{r}
#| label: deposit
#| eval: !expr OK
pbmcapply::pbmclapply(
    X = timestamps,
    FUN = leef_deposit,
    token = zen4R:::zenodo_pat(),
    data_package_dir = params$data_package_dir,
    metadata_extracted = params$metadata_extracted,
    metadata_pre_processed = params$metadata$pre_processed,
    metadata_bib = metadata_bib,
    publish = params$publish,
    sandbox = params$sandbox # ,
    # mc.cores = params$cores
)
```

